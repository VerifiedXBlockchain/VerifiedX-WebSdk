{
  "name": "vfx-web-sdk",
  "version": "1.0.21",
  "description": "Typescript/Javascript integration for VerifiedX with node and browser support.",
  "main": "lib/cjs/index.js",
  "module": "lib/esm/index.js",
  "types": "lib/esm/index.d.ts",
  "exports": {
    ".": {
      "types": "./lib/esm/index.d.ts",
      "import": "./lib/esm/index.js",
      "require": "./lib/cjs/index.js",
      "browser": "./lib/browser.js",
      "default": "./lib/cjs/index.js"
    }
  },
  "scripts": {
    "build": "npm run build:cjs && npm run build:esm && npm run build:browser && npm run apply-browser-fixes",
    "build:cjs": "tsc -p tsconfig.cjs.json",
    "build:esm": "tsc -p tsconfig.esm.json && npm run fix-esm-extensions",
    "build:browser": "./node_modules/.bin/esbuild src/browser.ts --bundle --sourcemap=external --format=iife --global-name=VfxSDK --outfile=lib/browser.js",
    "fix-esm-extensions": "find lib/esm -name '*.js' -exec sed -i '' -e \"s/from '\\(\\.[^']*\\)';$/from '\\1.js';/g\" {} \\;",
    "apply-browser-fixes": "cp ./resources/cipher-fix.js ./lib/cipher-fix.js",
    "postinstall": "node -e \"const fs = require('fs'); const path = require('path'); try { const dirs = ['./node_modules/math-intrinsics', './node_modules/get-intrinsic/node_modules/math-intrinsics']; dirs.forEach(dir => { if (!fs.existsSync(dir)) return; const roundFile = path.join(dir, 'round.js'); if (!fs.existsSync(roundFile)) { fs.writeFileSync(roundFile, \\\"'use strict';\\\\n\\\\n/** @type {import('./round')} */\\\\nmodule.exports = Math.round;\\\"); } const roundDts = path.join(dir, 'round.d.ts'); if (!fs.existsSync(roundDts)) { fs.writeFileSync(roundDts, \\\"export = round;\\\\ndeclare function round(x: number): number;\\\"); } const pkgFile = path.join(dir, 'package.json'); if (fs.existsSync(pkgFile)) { const pkg = JSON.parse(fs.readFileSync(pkgFile, 'utf8')); if (pkg.exports && !pkg.exports['./round']) { pkg.exports['./round'] = './round.js'; fs.writeFileSync(pkgFile, JSON.stringify(pkg, null, '\\\\t')); } } const jsFiles = fs.readdirSync(dir).filter(f => f.endsWith('.js')).map(f => path.join(dir, f)); jsFiles.forEach(file => { if (fs.existsSync(file)) { const content = fs.readFileSync(file, 'utf8'); const fixed = content.replace(/require\\\\('\\\\.\\\\/([^']+)'\\\\)/g, (match, mod) => { if (['isNaN', 'abs', 'floor', 'isFinite'].includes(mod)) { const replacements = { isNaN: 'Number.isNaN || function isNaN(a) { return a !== a; }', abs: 'Math.abs', floor: 'Math.floor', isFinite: 'Number.isFinite || function isFinite(x) { return typeof x === \\\\\\\"number\\\\\\\" && !isNaN(x) && x !== Infinity && x !== -Infinity; }' }; return replacements[mod] || match; } return match; }); if (fixed !== content) fs.writeFileSync(file, fixed); } }); }); } catch (e) { console.warn('postinstall math-intrinsics fix failed:', e.message); }\"",
    "format": "prettier --write \"src/**/*.(js|ts)\"",
    "lint": "eslint src --ext .js,.ts",
    "lint:fix": "eslint src --fix --ext .js,.ts",
    "test": "jest --config jest.config.js --silent='false'",
    "prepare": "npm run build",
    "prepublishOnly": "npm test && npm run lint && npm run build",
    "preversion": "npm run lint",
    "version": "npm run format && git add -A src",
    "postversion": "git push && git push --tags"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/VerifiedXBlockchain/VerifiedX-WebSdk"
  },
  "keywords": [
    "boilerplate",
    "typescript"
  ],
  "author": "Tyler Savery",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/VerifiedXBlockchain/VerifiedX-WebSdk/issues"
  },
  "homepage": "https://github.com/VerifiedXBlockchain/VerifiedX-WebSdk#readme",
  "dependencies": {
    "axios": "^1.9.0",
    "bip32": "3.0.1",
    "bip39": "3.0.2",
    "browser-crypto": "^2.0.0",
    "bs58": "^5.0.0",
    "crypto-js": "^3.1.9-1",
    "elliptic": "^6.5.4",
    "hdkey": "^2.1.0",
    "secp256k1": "^5.0.0",
    "tiny-secp256k1": "1.1.6"
  },
  "devDependencies": {
    "@types/crypto-js": "^4.1.1",
    "@types/elliptic": "^6.4.14",
    "@types/hdkey": "^2.0.1",
    "@types/jest": "29.2.4",
    "@types/secp256k1": "^4.0.3",
    "@types/tiny-secp256k1": "1.0.0",
    "@typescript-eslint/eslint-plugin": "5.46.0",
    "@typescript-eslint/parser": "5.47.1",
    "browserify": "^17.0.0",
    "dotenv": "^16.0.3",
    "esbuild": "^0.17.10",
    "eslint": "8.30.0",
    "eslint-plugin-jest": "27.1.7",
    "jest": "29.3.1",
    "prettier": "2.8.1",
    "ts-jest": "29.0.3",
    "typescript": "4.9.4"
  },
  "files": [
    "lib/**/*",
    "README.md"
  ],
  "engines": {
    "npm": ">=8.19.3",
    "node": ">=18.13.0"
  },
  "overrides": {
    "math-intrinsics": "1.1.0"
  },
  "pnpm": {
    "overrides": {
      "math-intrinsics": "1.1.0"
    }
  }
}